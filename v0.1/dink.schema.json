{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "d!nk Publication Structure",
  "description": "The json structure of data created by the d!nk Powerpoint plugin",
  "attributes": {
    "size": {
      "description": "Display size info",
      "type": "object",
      "properties": {
        "landscape": {
          "type": "object",
          "properties": {
            "width": {
              "description": "Landscape width",
              "type": "number"
            },
            "height": {
              "description": "Landscape height",
              "type": "number"
            }
          }
        },
        "portrait": {
          "type": "object",
          "properties": {
            "width": {
              "description": "Portrait width",
              "type": "number"
            },
            "height": {
              "description": "Portrait height",
              "type": "number"
            }
          }
        }
      }
    },
    "position": {
      "description": "Position info",
      "type": "object",
      "properties": {
        "landscape": {
          "type": "object",
          "properties": {
            "top": {
              "description": "Y coordinate",
              "type": "number"
            },
            "left": {
              "description": "X coordinate",
              "type": "number"
            }
          }
        },
        "portrait": {
          "type": "object",
          "properties": {
            "top": {
              "description": "Y coordinate",
              "type": "number"
            },
            "left": {
              "description": "X coordinate",
              "type": "number"
            }
          }
        }
      }
    },
    "navigation": {
      "description": "Navigation info",
      "type": "object",
      "properties": {
        "previous": {
          "description": "Determines if user can go back to previous page by sliding",
          "type": "boolean"
        },
        "next": {
          "description": "Determines if user can go to next page by sliding",
          "type": "boolean"
        }
      },
      "required": [
        "next",
        "previous"
      ]
    },
    "visibility": {
      "description": "Visibility info",
      "type": "object",
      "properties": {
        "portrait": {
          "description": "Determines if component is visible in portrait mode",
          "type": "boolean"
        },
        "landscape": {
          "description": "Determines if component is visible in landscape mode",
          "type": "boolean"
        }
      },
      "required": [
        "portrait",
        "landscape"
      ]
    },
    "css": {
      "description": "CSS rules",
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "selector": {
                "type": "string"
              },
              "style": {
                "type": "object"
              }
            },
            "required": [
              "selector",
              "style"
            ]
          }
        }
      },
      "required": [
        "rules"
      ]
    },
    "basicStyle": {
      "description": "Basic style properties",
      "type": "object",
      "properties": {
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "fontSize": {
          "type": "number"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "enum": [
            "bold",
            "bolder",
            "lighter",
            "normal"
          ]
        },
        "fontStyle": {
          "type": "string",
          "enum": [
            "normal",
            "italic"
          ]
        },
        "foregroundColor": {
          "type": "string",
          "pattern": "^#[0-9a-fA-F]{6}$"
        },
        "backgroundColor": {
          "type": "string",
          "pattern": "^#[0-9a-fA-F]{6}$"
        },
        "textAlignment": {
          "type": "string",
          "enum": [
            "left",
            "center",
            "justify",
            "right"
          ]
        },
        "verticalAlignment": {
          "type": "string",
          "enum": [
            "top",
            "middle",
            "bottom",
            "super",
            "sub"
          ]
        },
        "textDecoration": {
          "type": "string",
          "enum": [
            "overline",
            "line-through",
            "underline"
          ]
        },
        "whiteSpace": {
          "type": "string",
          "enum": [
            "normal",
            "nowrap"
          ]
        },
        "marginBottom": {
          "type": "number"
        },
        "marginTop": {
          "type": "number"
        },
        "marginLeft": {
          "type": "number"
        },
        "marginRight": {
          "type": "number"
        },
        "paddingTop": {
          "type": "number"
        },
        "paddingBottom": {
          "type": "number"
        },
        "paddingLeft": {
          "type": "number"
        },
        "paddingRight": {
          "type": "number"
        },
        "borderColor": {
          "description": "the color of the border",
          "type": "string",
          "pattern": "^#[0-9a-fA-F]{6}$"
        },
        "borderWidth": {
          "type": "number"
        },
        "borderStyle": {
          "type": "string",
          "enum": [
            "solid",
            "dashed",
            "dotted"
          ]
        },
        "listStyleType": {
          "type": "string",
          "enum": [
            "disc",
            "circle",
            "square",
            "decimal"
          ]
        },
        "listStylePosition": {
          "type": "string",
          "enum": [
            "inside",
            "outside"
          ]
        }
      }
    },
    "state": {
      "description": "State info used to retrieve or save data",
      "type": "object",
      "properties": {
        "storyKey": {
          "type": "string"
        },
        "magjetName": {
          "type": "string"
        },
        "eraseAfterUse": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "enum": [
            "ajax"
          ]
        },
        "sendPayload": {
          "type": "boolean"
        }
      },
      "required": [
        "storyKey",
        "magjetName"
      ]
    },
    "userData": {
      "description": "User data, used by dynamicValue to know the path of the component",
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "path",
        "name"
      ]
    },
    "propertyEnabled": {
      "description": "structure often used to disable/enable property",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "storyLinkData": {
      "description": "structure used to provide data for story links",
      "type": "object",
      "properties": {
        "story": {
          "description": "the page the user wants to open, can be an identifier or a special string. Forward/Back means go to the next/previous page in your history",
          "type": "string",
          "pattern": "\\b(next|previous|back|forward|source|no|^[0-9]*$)\\b"
        },
        "animation": {
          "description": "the desired page transition effect",
          "type": "string",
          "default": "none",
          "enum": [
            "none",
            "slideright",
            "slideleft",
            "pop",
            "fade",
            "slideup",
            "slidedown"
          ]
        }
      },
      "required": [
        "story"
      ]
    },
    "gradientData": {
      "description": "structure used to provide data for gradient",
      "type": "object",
      "properties": {
        "type": {
          "description": "the type of gradient, only linear for now",
          "type": "string",
          "enum": [
            "linear"
          ]
        },
        "direction": {
          "description": "the direction of the gradient",
          "type": "string",
          "default": "down",
          "enum": [
            "left",
            "right",
            "down",
            "up"
          ]
        },
        "colors": {
          "description": "the color stops of the gradient",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^#[0-9a-fA-F]{6}$"
          }
        }
      },
      "required": [
        "type",
        "direction",
        "colors"
      ]
    },
    "animation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "order": {
          "type": "number"
        },
        "speed": {
          "type": "number"
        },
        "delay": {
          "type": "number"
        },
        "trigger": {
          "type": "string",
          "enum": [
            "load",
            "auto",
            "click",
            "previous"
          ]
        }
      },
      "required": [
        "name",
        "speed"
      ]
    }
  },
  "components": {
    "magjet": {
      "description": "Basic magjet",
      "type": "object",
      "properties": {
        "size": {
          "$ref": "#/attributes/size"
        },
        "position": {
          "$ref": "#/attributes/position"
        },
        "visibility": {
          "$ref": "#/attributes/visibility"
        }
      },
      "required": [
        "size",
        "position",
        "visibility"
      ]
    },
    "image": {
      "description": "Image component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "image"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "src": {
                  "type": "string"
                },
                "animation": {
                  "$ref": "#/attributes/animation"
                },
                "scroll": {
                  "type": "string",
                  "enum": [
                    "vertical",
                    "horizontal"
                  ]
                },
                "condition": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "match": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "match"
                  ]
                }
              },
              "required": [
                "src"
              ]
            },
            "style": {
              "type": "object",
              "properties": {
                "container": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "borderColor",
                        "borderWidth"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "advanced": {
      "description": "Advanced component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "advanced"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "js": {
                  "type": "string"
                }
              },
              "required": [
                "js"
              ]
            },
            "assets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "data",
            "assets"
          ]
        }
      ]
    },
    "text": {
      "description": "Text component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "text"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "decimals": {
                  "type": "number",
                  "description": "number of decimals to be rendered in case the content.path is a numeric value"
                },
                "rounding": {
                  "type": "string",
                  "enum": [
                    "normal",
                    "up",
                    "down"
                  ]
                },
                "format": {
                  "type": "string",
                  "description": "another way to customize the output"
                },
                "trigger": {
                  "type": "string",
                  "description": "userData.path of the element used to trigger the state change (used for vlookup)"
                },
                "multiline": {
                  "type": "boolean",
                  "description": "if true, the text inside will respect the style.width limit"
                },
                "animation": {
                  "$ref": "#/attributes/animation"
                }
              },
              "required": [
                "content"
              ]
            },
            "css": {
              "$ref": "#/attributes/css"
            },
            "style": {
              "allOf": [
                {
                  "$ref": "#/attributes/basicStyle"
                },
                {
                  "required": [
                    "fontSize",
                    "fontFamily",
                    "foregroundColor"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "slider": {
      "description": "Slider component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "slider"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "count": {
                  "type": "number"
                },
                "total": {
                  "type": "boolean"
                },
                "autosave": {
                  "type": "boolean",
                  "description": "when set to true, it saves the value when the user is still dragging the slider"
                },
                "values": {
                  "type": "array"
                },
                "default": {
                  "type": "string"
                },
                "sheetInfo": {
                  "description": "optional property that binds the slider to a spreadsheet column",
                  "column": {
                    "description": "the column/field to which you want to bind the slider",
                    "type": "string"
                  },
                  "path": {
                    "description": "@deprecated. Use userData property values instead to find the path of the slider component.",
                    "type": "string"
                  }
                }
              },
              "required": [
                "userData",
                "count",
                "total",
                "values",
                "default"
              ]
            },
            "css": {
              "$ref": "#/attributes/css"
            },
            "style": {
              "type": "object",
              "properties": {
                "main": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "properties": {
                        "backgroundGradient": {
                          "$ref": "#/attributes/gradientData"
                        }
                      },
                      "required": [
                        "height"
                      ]
                    }
                  ]
                },
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "properties": {
                        "hideText": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "width"
                      ]
                    }
                  ]
                },
                "handler": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "properties": {
                        "hideText": {
                          "type": "boolean"
                        },
                        "offsetText": {
                          "type": "number"
                        },
                        "image": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "width",
                        "height",
                        "marginTop"
                      ]
                    }
                  ]
                },
                "selected": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "properties": {
                        "image": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "image"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "main",
                "handler"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "webLink": {
      "description": "webLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "webLink"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "src": {
                  "description": "the url we need to open",
                  "type": "string"
                }
              },
              "required": [
                "src"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "storyLink": {
      "description": "storyLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "storyLink"
              ]
            },
            "data": {
              "$ref": "#/attributes/storyLinkData"
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "pdfLink": {
      "description": "pdfLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "pdfLink"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "src": {
                  "description": "the source of the pdf document",
                  "type": "string"
                },
                "startPage": {
                  "type": "number"
                },
                "externalApp": {
                  "type": "boolean"
                },
                "annotated": {
                  "type": "boolean",
                  "description": "indicates if file can be added to account hub"
                },
                "shared": {
                  "type": "boolean",
                  "description": "indicates if annotations option needs to be available"
                }
              },
              "required": [
                "src",
                "startPage",
                "externalApp"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "refreshLink": {
      "description": "refreshLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "refreshLink"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "refresh_target": {
                  "description": "page to show after the publication has been refreshed",
                  "type": "string",
                  "pattern": "(^$|(^S\\d*$))"
                },
                "timer": {
                  "description": "a timer starts counting when there is no activity",
                  "type": "string",
                  "enum": [
                    "yes",
                    "no"
                  ]
                },
                "milli": {
                  "description": "number of milliseconds after which to refresh, used by timer",
                  "type": "string",
                  "pattern": "^[0-9]*$"
                }
              },
              "required": [
                "refresh_target",
                "timer",
                "milli"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "publicationLink": {
      "description": "publicationLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "publicationLink"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "publicationName": {
                  "description": "the name of the publication the user wants to open",
                  "type": "string"
                },
                "story": {
                  "description": "the page that should be shown when opening the publication",
                  "type": "string",
                  "pattern": "^[0-9]*$"
                }
              },
              "required": [
                "publicationName",
                "story"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "kioskLink": {
      "description": "kioskLink component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "kioskLink"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "kioskName": {
                  "description": "the name of the kiosk the user wants to open",
                  "type": "string"
                }
              },
              "required": [
                "kioskName"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "pdfSelect": {
      "description": "pdfSelect component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "pdfSelect"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "files": {
                  "description": "the name of pdf files you can select",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "files"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "signature": {
      "description": "signature component, using a canvas to allow users to sign a publication",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "signature"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "isTransparent": {
                  "type": "boolean"
                },
                "strokeColor": {
                  "type": "string"
                },
                "lineWidth": {
                  "type": "number"
                },
                "buttonLabel": {
                  "description": "the label appearing on the button that can be used to clear the signature canvas",
                  "type": "string"
                },
                "buttonPosition": {
                  "description": "the position of the button - relative to the canvas - that can be used to clear the signature canvas",
                  "type": "string",
                  "enum": [
                    "top left",
                    "top right",
                    "bottom right",
                    "bottom left"
                  ]
                }
              },
              "required": [
                "isTransparent",
                "strokeColor",
                "lineWidth",
                "buttonLabel",
                "buttonPosition"
              ]
            },
            "style": {
              "canvas": {
                "allOf": [
                  {
                    "$ref": "#/attributes/basicStyle"
                  },
                  {
                    "required": [
                      "borderColor",
                      "borderWidth",
                      "borderStyle"
                    ]
                  }
                ]
              },
              "clear": {
                "allOf": [
                  {
                    "$ref": "#/attributes/basicStyle"
                  },
                  {
                    "required": [
                      "width",
                      "height",
                      "backgroundColor"
                    ]
                  }
                ]
              }
            },
            "css": {
              "$ref": "#/attributes/css"
            }
          },
          "required": [
            "type",
            "data",
            "style"
          ]
        }
      ]
    },
    "graphicSelect": {
      "description": "graphicSelect component a.k.a. select hotzone, equivalent of html area element",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "graphicSelect"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "image": {
                  "description": "the background image",
                  "type": "object",
                  "properties": {
                    "src": {
                      "type": "string"
                    },
                    "width": {
                      "type": "number"
                    },
                    "height": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "src",
                    "width",
                    "height"
                  ]
                },
                "areas": {
                  "description": "specific zones/areas that can be clicked",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "top": {
                        "description": "y-position relative to the hotzone magjet",
                        "type": "number"
                      },
                      "left": {
                        "description": "x-position relative to the hotzone magjet",
                        "type": "number"
                      },
                      "type": {
                        "description": "shape of the clickable area",
                        "type": "string",
                        "enum": [
                          "circle"
                        ]
                      },
                      "value": {
                        "description": "the value associated with this specific zone",
                        "type": "string"
                      },
                      "radius": {
                        "description": "radius of the circle, if 2 values are given they will determine the width and height of an ellipse",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "minItems": 1,
                        "maxItems": 2
                      },
                      "path": {
                        "description": "same purpose as userData.path",
                        "type": "string"
                      },
                      "name": {
                        "description": "same purpose as userData.name",
                        "type": "string"
                      }
                    },
                    "required": [
                      "top",
                      "left",
                      "type",
                      "radius",
                      "path",
                      "name",
                      "value"
                    ]
                  }
                },
                "singleAnswer": {
                  "description": "determines if the answer should be just one item",
                  "type": "boolean"
                }
              },
              "required": [
                "userData",
                "image",
                "areas"
              ]
            },
            "css": {
              "$ref": "#/attributes/css"
            },
            "style": {
              "allOf": [
                {
                  "$ref": "#/attributes/basicStyle"
                },
                {
                  "properties": {
                    "selectedBorderColor": {
                      "type": "string",
                      "pattern": "^#[0-9a-fA-F]{6}$"
                    }
                  },
                  "required": [
                    "selectedBorderColor",
                    "borderColor",
                    "borderWidth"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "mail": {
      "description": "Mail component, now moved to submit button configuration",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "mail"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "client",
                    "server"
                  ]
                },
                "client": {
                  "type": "object",
                  "properties": {
                    "to": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cc": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subject": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "to",
                    "cc",
                    "subject",
                    "body"
                  ]
                },
                "server": {
                  "type": "object",
                  "properties": {
                    "to": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cc": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "from": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "replyTo": {
                      "type": "string"
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "end": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "start",
                        "content",
                        "end"
                      ]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "to": {
                          "$ref": "#/attributes/propertyEnabled"
                        },
                        "from": {
                          "$ref": "#/attributes/propertyEnabled"
                        },
                        "subject": {
                          "$ref": "#/attributes/propertyEnabled"
                        },
                        "body": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "$ref": "#/attributes/propertyEnabled"
                            }
                          },
                          "required": [
                            "content"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "to",
                    "cc",
                    "subject",
                    "body",
                    "user"
                  ]
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "dynamicValue": {
      "description": "dynamicValue component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "dynamicValue"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "path": {
                  "description": "path to be added to each field in the result",
                  "type": "string"
                },
                "filters": {
                  "description": "list of paths of the fields used as input",
                  "type": "object"
                }
              },
              "required": [
                "path",
                "filters"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "sheetRecord": {
      "description": "sheetRecord component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "sheetRecord"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "enterprise": {
                  "description": "key of the enterprise in data store",
                  "type": "string"
                },
                "spreadsheet": {
                  "description": "key of the Google Drive spreadsheet",
                  "type": "string"
                },
                "submitLabel": {
                  "type": "string"
                },
                "columns": {
                  "description": "columns and their values to be used for a new record/row in a spreadsheet",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column": {
                        "description": "field/column name",
                        "type": "string"
                      },
                      "input": {
                        "description": "field/column input value",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "userData",
                "enterprise",
                "spreadsheet",
                "submitLabel",
                "columns"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "input": {
      "description": "input component a.k.a. open question magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "input"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "number",
                    "textarea",
                    "date"
                  ]
                },
                "label": {
                  "description": "the question being asked",
                  "type": "string"
                },
                "default": {
                  "description": "the default answer to the question",
                  "type": "string"
                },
                "replaceWhenChanged": {
                  "description": "replaces the value of an input magjet when the default value comes from a different magjet",
                  "type": "boolean"
                },
                "decimals": {
                  "type": "number",
                  "description": "number of decimals to be used in calculation"
                },
                "rounding": {
                  "type": "string",
                  "enum": [
                    "normal",
                    "up",
                    "down"
                  ]
                },
                "sheetInfo": {
                  "column": {
                    "description": "the column/field value from the dynamicValue spreadsheet that should be displayed in this input field",
                    "type": "string"
                  },
                  "path": {
                    "description": "@deprecated. Use userData property values instead",
                    "type": "string"
                  }
                }
              },
              "required": [
                "userData",
                "type",
                "label",
                "default"
              ]
            },
            "css": {
              "$ref": "#/attributes/css"
            },
            "style": {
              "type": "object",
              "properties": {
                "container": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "width",
                        "height"
                      ]
                    }
                  ]
                },
                "question": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "fontFamily",
                        "fontWeight",
                        "fontSize",
                        "foregroundColor",
                        "width",
                        "height",
                        "marginTop",
                        "marginLeft"
                      ]
                    }
                  ]
                },
                "field": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "fontFamily",
                        "fontSize",
                        "foregroundColor",
                        "backgroundColor",
                        "width",
                        "height",
                        "marginTop",
                        "marginLeft"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "container",
                "question",
                "field"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "inputValidator": {
      "description": "inputValidator component maps to userinputvalidator magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "inputValidator"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "collectorPath": {
                  "type": "string"
                },
                "inputPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "collectorPath",
                "inputPaths"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "inputCollector": {
      "description": "inputCollector component maps to userinputcollector magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "inputCollector"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "allFieldsAreMandatory": {
                  "type": "boolean"
                },
                "mandatoryFields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "internetConnectionRequired": {
                  "type": "boolean"
                },
                "closePublicationAfterSubmit": {
                  "type": "boolean"
                },
                "isReadOnly": {
                  "description": "means the field values cannot be changed by the user when viewing the publication",
                  "type": "boolean"
                },
                "resetOnSubmit": {
                  "type": "boolean"
                },
                "messages": {
                  "type": "object",
                  "properties": {
                    "sending": {
                      "description": "message to display while sending data",
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success"
                  ]
                },
                "states": {
                  "type": "object",
                  "properties": {
                    "load": {
                      "$ref": "#/attributes/state"
                    },
                    "send": {
                      "$ref": "#/attributes/state"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "includeGeneratedPdf": {
                      "type": "boolean",
                      "default": true
                    },
                    "to": {
                      "description": "recipients of the mail",
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "description": "single email address, can also be an empty string",
                          "type": "string"
                        }
                      ]
                    },
                    "cc": {
                      "description": "recipients in cc of the mail",
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "description": "single email address, can also be an empty string",
                          "type": "string"
                        }
                      ]
                    },
                    "from": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "path": {
                      "description": "@TODO: find out what this is about",
                      "type": "object"
                    }
                  }
                },
                "pdf": {
                  "type": "object",
                  "properties": {
                    "generate": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "prepend": {
                              "type": "string"
                            },
                            "append": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "share": {
                      "type": "string",
                      "enum": [
                        "none",
                        "enterprise",
                        "email",
                        "accounthub"
                      ]
                    }
                  },
                  "required": [
                    "generate",
                    "share"
                  ]
                },
                "excel": {
                  "type": "object",
                  "properties": {
                    "send": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "send"
                  ]
                },
                "syncFileTransactions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "notificationUrl": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "notificationUrl"
                    ]
                  }
                }
              },
              "required": [
                "path",
                "allFieldsAreMandatory",
                "messages",
                "excel",
                "syncFileTransactions",
                "pdf"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "video": {
      "description": "video component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "size": {
              "$ref": "#/attributes/size"
            },
            "position": {
              "$ref": "#/attributes/position"
            },
            "visibility": {
              "$ref": "#/attributes/visibility"
            },
            "type": {
              "type": "string",
              "enum": [
                "video"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string"
                },
                "loop": {
                  "type": "boolean"
                },
                "controls": {
                  "type": "boolean"
                },
                "autoPlay": {
                  "type": "boolean"
                },
                "image": {
                  "description": "the poster image aka placeholder for this video",
                  "type": "object",
                  "properties": {
                    "width": {
                      "type": "number"
                    },
                    "height": {
                      "type": "number"
                    },
                    "src": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "src",
                "image"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "audio": {
      "description": "audio component",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "size": {
              "$ref": "#/attributes/size"
            },
            "position": {
              "$ref": "#/attributes/position"
            },
            "visibility": {
              "$ref": "#/attributes/visibility"
            },
            "type": {
              "type": "string",
              "enum": [
                "audio"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string"
                },
                "loop": {
                  "type": "boolean"
                }
              },
              "required": [
                "src"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "select": {
      "description": "select component aka survey magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "select"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "type": {
                  "description": "determines how the options should be displayed",
                  "type": "string",
                  "enum": [
                    "checkbox",
                    "radio",
                    "list"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "default": {
                  "type": "string"
                },
                "bigTextFieldForInput": {
                  "type": "boolean",
                  "default": false
                },
                "sheetInfo": {
                  "description": "optional property that retrieves available options from a spreadsheet",
                  "column": {
                    "description": "the column/field values from the dynamicValue spreadsheet that should be displayed as options",
                    "type": "string"
                  },
                  "path": {
                    "description": "@deprecated. Use userData property values instead to find the path of the select component.",
                    "type": "string"
                  }
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "useTextarea": {
                        "type": "boolean",
                        "default": false
                      },
                      "storyLink": {
                        "$ref": "#/attributes/storyLinkData"
                      }
                    },
                    "required": [
                      "label",
                      "value",
                      "editable"
                    ]
                  }
                }
              },
              "required": [
                "userData",
                "type",
                "label",
                "options"
              ]
            },
            "css": {
              "$ref": "#/attributes/css"
            },
            "style": {
              "type": "object",
              "properties": {
                "question": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "fontFamily",
                        "fontWeight",
                        "fontSize",
                        "textAlignment",
                        "foregroundColor",
                        "width"
                      ]
                    }
                  ]
                },
                "items": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/attributes/basicStyle"
                      },
                      {
                        "properties": {
                          "fieldWidth": {
                            "type": "number",
                            "description": "the width of the input element"
                          },
                          "fieldHeight": {
                            "type": "number",
                            "description": "the height of the input element"
                          },
                          "custom": {
                            "type": "boolean",
                            "description": "true when the native field has to be invisible and the custom mode is activated"
                          },
                          "image": {
                            "type": "string",
                            "description": "the image of the arrow icon"
                          },
                          "arrowColor": {
                            "type": "string",
                            "pattern": "^#[0-9a-fA-F]{6}$",
                            "description": "color to be applied in the arrow if it's a SVG"
                          }
                        },
                        "required": [
                          "fontFamily",
                          "fontSize",
                          "foregroundColor",
                          "marginTop",
                          "marginLeft",
                          "width",
                          "fieldWidth",
                          "fieldHeight"
                        ]
                      }
                    ]
                  }
                },
                "other": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "fontSize",
                        "marginTop",
                        "marginLeft",
                        "width",
                        "height"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "question",
                "items"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "calculation": {
      "description": "calculation component",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "calculation"
          ]
        },
        "data": {
          "type": "object",
          "properties": {
            "userData": {
              "$ref": "#/attributes/userData"
            },
            "inputs": {
              "description": "key value object which maps the variable in the function to be replaced with the corresponding path",
              "type": "object"
            },
            "function": {
              "description": "mathematical expression used to be calculated. ex: A * B",
              "type": "string"
            },
            "decimals": {
              "type": "number",
              "description": "number of decimals to be used in calculation"
            },
            "rounding": {
              "type": "string",
              "enum": [
                "normal",
                "up",
                "down"
              ]
            }
          },
          "required": [
            "userData",
            "function",
            "inputs"
          ]
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "converter": {
      "description": "converter component",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "converter"
          ]
        },
        "data": {
          "type": "object",
          "properties": {
            "userData": {
              "$ref": "#/attributes/userData"
            },
            "input": {
              "description": "the path of the field used as input for the converter",
              "type": "string"
            },
            "default": {
              "description": "default key of value used when there is no value from input",
              "type": "string"
            },
            "range": {
              "description": "if true, the interval between one key and other will also shown a value",
              "type": "boolean"
            },
            "values": {
              "description": "key value object which maps the input value to a string for display purposes",
              "type": "object"
            },
            "removeEmptyPositions": {
              "description": "when true, removes the null positions in the input's array",
              "type": "boolean"
            }
          },
          "required": [
            "userData",
            "input",
            "default",
            "values"
          ]
        }
      },
      "required": [
        "type",
        "data"
      ]
    },
    "dragItem": {
      "description": "dragItem is part of dragAndDrop magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "dragItem"
              ]
            },
            "src": {
              "description": "the url of a image if necessary",
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "the label of the dragItem"
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string",
                      "description": "the value of the dragItem"
                    },
                    {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "unselected": {
                  "type": "string",
                  "description": "the value of the dragItem when unselected and orderByDragItem is true"
                }
              },
              "required": [
                "value"
              ]
            },
            "style": {
              "allOf": [
                {
                  "$ref": "#/attributes/basicStyle"
                },
                {
                  "properties": {
                    "tagColor": {
                      "description": "the color of the tag of a dragItem",
                      "type": "string",
                      "pattern": "^#[0-9a-fA-F]{6}$"
                    },
                    "image": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "type",
            "data",
            "style"
          ]
        }
      ]
    },
    "dropZone": {
      "description": "dropZone is part of dragAndDrop magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "dropZone"
              ]
            },
            "style": {
              "allOf": [
                {
                  "$ref": "#/attributes/basicStyle"
                },
                {
                  "required": [
                    "borderColor"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "style"
          ]
        }
      ]
    },
    "dragAndDrop": {
      "description": "dragAndDrop magjet",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "dragAndDrop"
          ]
        },
        "data": {
          "type": "object",
          "properties": {
            "orderByDragItem": {
              "type": "boolean",
              "description": "if true, the output value will consider the dragItem's order instead of the dropZone's"
            },
            "userData": {
              "$ref": "#/attributes/userData"
            }
          },
          "required": [
            "userData"
          ]
        },
        "dragitems": {
          "type": "array",
          "description": "the list of dragItems",
          "minItems": 1,
          "items": {
            "$ref": "#/components/dragItem"
          }
        },
        "dropzones": {
          "type": "array",
          "description": "the list of dropZones",
          "minItems": 1,
          "items": {
            "$ref": "#/components/dropZone"
          }
        }
      },
      "required": [
        "type",
        "data",
        "dragitems",
        "dropzones"
      ]
    },
    "reorder": {
      "description": "reorder component allow the presentation changes the sequence of slides",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "reorder"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "userData": {
                  "$ref": "#/attributes/userData"
                },
                "inputs": {
                  "description": "list of paths of the fields used as input for the change of the reorder",
                  "type": "array"
                },
                "summary": {
                  "description": "the slideId of the slide that should always appear",
                  "type": "string"
                },
                "autosave": {
                  "description": "if a click is necessary to change the order of slides",
                  "type": "boolean"
                },
                "showList": {
                  "description": "if a list with the label of the selected slides has to be shown",
                  "type": "boolean"
                },
                "ignoreOrder": {
                  "description": "when true, the original slides order won't be respected",
                  "type": "boolean"
                },
                "slides": {
                  "description": "key of combination of slides to be the order when it matches with the input",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array"
                  }
                }
              },
              "required": [
                "userData",
                "inputs",
                "summary",
                "autosave",
                "slides"
              ]
            },
            "style": {
              "type": "object",
              "properties": {
                "button": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "width",
                        "height"
                      ]
                    }
                  ]
                },
                "filtered": {
                  "allOf": [
                    {
                      "$ref": "#/attributes/basicStyle"
                    },
                    {
                      "required": [
                        "width",
                        "height",
                        "marginTop",
                        "marginLeft"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "filtered"
              ]
            }
          },
          "required": [
            "type",
            "data"
          ]
        }
      ]
    },
    "chart": {
      "description": "the chart magjet",
      "allOf": [
        {
          "$ref": "#/components/magjet"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "chart"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "label to be displayed on the graph"
                      },
                      "path": {
                        "type": "string",
                        "description": "the path of the element to be used as source"
                      },
                      "value": {
                        "type": "number",
                        "description": "the static value when path is not filled"
                      },
                      "series": {
                        "type": "string",
                        "description": "the name of the series when the chart is multidimensional"
                      },
                      "type": {
                        "type": "string",
                        "description": "used by the bubble chart to know whether this path is about the x or y coordinates"
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "label",
                          "path"
                        ]
                      },
                      {
                        "required": [
                          "label",
                          "value"
                        ]
                      }
                    ]
                  }
                },
                "source": {
                  "type": "object",
                  "description": "the 'source table' of the chart",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "the way the path is built"
                    },
                    "columns": {
                      "type": [
                        "number",
                        "string"
                      ],
                      "description": "number of columns or the trigger for the columns"
                    },
                    "rows": {
                      "type": [
                        "number",
                        "string"
                      ],
                      "description": "number of rows or the trigger for the rows"
                    },
                    "header": {
                      "type": "boolean",
                      "description": "if the first row/column has to be ignored"
                    }
                  },
                  "required": [
                    "path",
                    "columns",
                    "rows",
                    "labels"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "bar",
                    "pie",
                    "radar",
                    "stacked",
                    "line",
                    "bubble"
                  ],
                  "description": "the type of the chart"
                },
                "gradient": {
                  "type": "boolean",
                  "description": "if the graph has to be rendered with a gradient"
                },
                "label": {
                  "type": "boolean",
                  "description": "if the label has to be shown"
                },
                "legend": {
                  "type": "boolean",
                  "description": "if the legend has to be shown"
                },
                "colors": {
                  "type": "array",
                  "description": "colors for each element of the chart",
                  "items": {
                    "type": "string",
                    "pattern": "^#[0-9a-fA-F]{6}$"
                  }
                },
                "bar": {
                  "type": "object",
                  "properties": {
                    "vertical": {
                      "type": "boolean",
                      "description": "if the lines of the bar chart are vertical"
                    },
                    "gutter": {
                      "type": "number",
                      "description": "space in pixels between each column"
                    },
                    "showData": {
                      "type": "boolean",
                      "description": "if the value of the column has to be shown in the chart"
                    },
                    "xFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the x Axys"
                    },
                    "yFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the y Axys"
                    },
                    "xAxis": {
                      "type": "string",
                      "description": "name of x axis"
                    },
                    "yAxis": {
                      "type": "string",
                      "description": "name of y axis"
                    },
                    "limits": {
                      "type": "object",
                      "description": "limits of the chart",
                      "properties": {
                        "xMin": {
                          "type": "number",
                          "description": "minimum x-scale value (will only work when not vertical)"
                        },
                        "xMax": {
                          "type": "number",
                          "description": "maximum x-scale value (will only work when not vertical)"
                        },
                        "yMin": {
                          "type": "number",
                          "description": "minimum y-scale value (will only work when vertical)"
                        },
                        "yMax": {
                          "type": "number",
                          "description": "maximum y-scale value (will only work when vertical)"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "xMin",
                            "xMax"
                          ]
                        },
                        {
                          "required": [
                            "yMin",
                            "yMax"
                          ]
                        }
                      ]
                    },
                    "benchmark": {
                      "type": "object",
                      "properties": {
                        "color": {
                          "type": "string",
                          "pattern": "^#[0-9a-fA-F]{6}$",
                          "description": "color of the benchmark point"
                        },
                        "column": {
                          "type": "string",
                          "description": "path of the the survey magjet that has the benchmarked column name as a value"
                        },
                        "coefficient": {
                          "type": "number",
                          "description": "percentage in decimals of the position of the benchmark point related to the bar's height"
                        }
                      },
                      "required": [
                        "color",
                        "column"
                      ]
                    }
                  },
                  "required": [
                    "vertical",
                    "xAxis",
                    "yAxis"
                  ]
                },
                "stacked": {
                  "type": "object",
                  "properties": {
                    "vertical": {
                      "type": "boolean",
                      "description": "if the lines of the bar chart are vertical"
                    },
                    "gutter": {
                      "type": "number",
                      "description": "space in pixels between each column"
                    },
                    "showData": {
                      "type": "boolean",
                      "description": "if the value of the column has to be shown in the chart"
                    },
                    "xFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the x Axys"
                    },
                    "yFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the y Axys"
                    },
                    "xAxis": {
                      "type": "string",
                      "description": "name of x axis"
                    },
                    "yAxis": {
                      "type": "string",
                      "description": "name of y axis"
                    }
                  },
                  "required": [
                    "vertical",
                    "xAxis",
                    "yAxis"
                  ]
                },
                "line": {
                  "type": "object",
                  "properties": {
                    "xFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the x Axys"
                    },
                    "yFormat": {
                      "type": "string",
                      "description": "a way to customize the labels of the y Axys"
                    },
                    "xAxis": {
                      "type": "string",
                      "description": "name of x axis"
                    },
                    "yAxis": {
                      "type": "string",
                      "description": "name of y axis"
                    }
                  },
                  "required": [
                    "xAxis",
                    "yAxis"
                  ]
                },
                "pie": {
                  "type": "object",
                  "properties": {
                    "doughnut": {
                      "type": "boolean",
                      "description": "if the chart has to have a doughnut format"
                    },
                    "explode": {
                      "type": "boolean",
                      "description": "if each item has to have a different size according its number"
                    },
                    "labels": {
                      "type": "boolean",
                      "description": "when false, the lines of the pie chart won't be shown"
                    }
                  },
                  "required": [
                    "doughnut",
                    "explode"
                  ]
                },
                "radar": {
                  "type": "object",
                  "properties": {
                    "autoScale": {
                      "type": "boolean",
                      "description": "if the base of scale is not zero"
                    },
                    "xAxis": {
                      "type": "boolean",
                      "description": "if the x axis will be shown"
                    },
                    "yAxis": {
                      "type": "boolean",
                      "description": "if the y axis will be shown"
                    },
                    "max": {
                      "type": "number",
                      "description": "maximum scale"
                    }
                  },
                  "required": [
                    "autoScale",
                    "xAxis",
                    "yAxis"
                  ]
                },
                "bubble": {
                  "type": "object",
                  "properties": {
                    "autoScale": {
                      "type": "boolean",
                      "description": "if the base of scale is not zero"
                    },
                    "xAxis": {
                      "type": "boolean",
                      "description": "if the x axis will be shown"
                    },
                    "yAxis": {
                      "type": "boolean",
                      "description": "if the y axis will be shown"
                    },
                    "limits": {
                      "type": "object",
                      "description": "limits of the chart",
                      "properties": {
                        "xMin": {
                          "type": "number",
                          "description": "minimum x-scale value"
                        },
                        "xMax": {
                          "type": "number",
                          "description": "maximum x-scale value"
                        },
                        "yMin": {
                          "type": "number",
                          "description": "minimum y-scale value"
                        },
                        "yMax": {
                          "type": "number",
                          "description": "maximum y-scale value"
                        }
                      },
                      "required": [
                        "xMin",
                        "xMax",
                        "yMin",
                        "yMax"
                      ]
                    },
                    "benchmark": {
                      "type": "object",
                      "description": "hightlighted point in the chart",
                      "properties": {
                        "position": {
                          "type": "array",
                          "description": "position pr path of the highlighted point (0 = x, 1 = y)",
                          "items": {
                            "type": [
                              "number",
                              "string"
                            ]
                          }
                        },
                        "color": {
                          "type": "string",
                          "pattern": "^#[0-9a-fA-F]{6}$",
                          "description": "color of the highlighted point"
                        }
                      },
                      "required": [
                        "position",
                        "color"
                      ]
                    },
                    "references": {
                      "type": "array",
                      "description": "list of reference lines",
                      "items": {
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "string",
                            "pattern": "^#[0-9a-fA-F]{6}$",
                            "description": "color of the reference line"
                          },
                          "value": {
                            "type": "number",
                            "description": "the y position of the line according to the scale"
                          }
                        },
                        "required": [
                          "color",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "autoScale",
                    "xAxis",
                    "yAxis"
                  ]
                }
              },
              "anyOf": [
                {
                  "required": [
                    "inputs",
                    "type",
                    "colors"
                  ]
                },
                {
                  "required": [
                    "source",
                    "type",
                    "colors"
                  ]
                }
              ]
            },
            "style": {
              "allOf": [
                {
                  "$ref": "#/attributes/basicStyle"
                },
                {
                  "required": [
                    "fontFamily",
                    "fontSize",
                    "fontWeight"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "data",
            "style"
          ]
        }
      ]
    }
  },
  "definitions": {
    "story": {
      "description": "A page within a publication",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[0-9]*$"
        },
        "slideId": {
          "type": "string",
          "pattern": "^[0-9]*$"
        },
        "navigation": {
          "$ref": "#/attributes/navigation"
        },
        "magjets": {
          "description": "Components of the story",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/image"
              },
              {
                "$ref": "#/components/advanced"
              },
              {
                "$ref": "#/components/slider"
              },
              {
                "$ref": "#/components/webLink"
              },
              {
                "$ref": "#/components/storyLink"
              },
              {
                "$ref": "#/components/pdfLink"
              },
              {
                "$ref": "#/components/refreshLink"
              },
              {
                "$ref": "#/components/publicationLink"
              },
              {
                "$ref": "#/components/kioskLink"
              },
              {
                "$ref": "#/components/pdfSelect"
              },
              {
                "$ref": "#/components/signature"
              },
              {
                "$ref": "#/components/mail"
              },
              {
                "$ref": "#/components/graphicSelect"
              },
              {
                "$ref": "#/components/dynamicValue"
              },
              {
                "$ref": "#/components/sheetRecord"
              },
              {
                "$ref": "#/components/input"
              },
              {
                "$ref": "#/components/inputValidator"
              },
              {
                "$ref": "#/components/inputCollector"
              },
              {
                "$ref": "#/components/video"
              },
              {
                "$ref": "#/components/audio"
              },
              {
                "$ref": "#/components/select"
              },
              {
                "$ref": "#/components/text"
              },
              {
                "$ref": "#/components/calculation"
              },
              {
                "$ref": "#/components/converter"
              },
              {
                "$ref": "#/components/dragAndDrop"
              },
              {
                "$ref": "#/components/reorder"
              },
              {
                "$ref": "#/components/chart"
              }
            ]
          }
        }
      },
      "required": [
        "id",
        "slideId",
        "navigation"
      ]
    }
  },
  "type": "object",
  "properties": {
    "size": {
      "$ref": "#/attributes/size"
    },
    "aspectRatio": {
      "description": "The aspect ratio of the publication",
      "type": "string",
      "enum": [
        "4:3",
        "16:9",
        "16:10",
        "3:2"
      ]
    },
    "responsive": {
      "description": "If the responsive mode is enabled",
      "type": "boolean"
    },
    "stories": {
      "description": "Pages of the publication",
      "type": "array",
      "items": {
        "$ref": "#/definitions/story"
      }
    }
  },
  "required": [
    "size",
    "aspectRatio",
    "responsive"
  ]
}